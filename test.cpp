#include <iostream>
#include <locale>
#include <cstdio>
#include <clocale>
#include <sstream>
using namespace std;

//초성 
static const wchar_t wcF[] = {
	L'ㄱ', L'ㄲ', L'ㄴ', L'ㄷ', 
	L'ㄸ', L'ㄹ', L'ㅁ', L'ㅂ', 
	L'ㅃ', L'ㅅ', L'ㅆ', L'ㅇ', 
	L'ㅈ', L'ㅉ', L'ㅊ', L'ㅋ', 
	L'ㅌ', L'ㅍ', L'ㅎ'}; 

//중성 
static const wchar_t wcM[] = {
	L'ㅏ', L'ㅐ', L'ㅑ', L'ㅒ', 
	L'ㅓ', L'ㅔ', L'ㅕ', L'ㅖ', 
	L'ㅗ', L'ㅘ', L'ㅙ', L'ㅚ', 
	L'ㅛ', L'ㅜ', L'ㅝ', L'ㅞ', 
	L'ㅟ', L'ㅠ', L'ㅡ', L'ㅢ',
	L'ㅣ'}; 

//종성 
static const wchar_t wcL[] = {
	L' ', L'ㄱ', L'ㄲ', L'ㄳ', 
	L'ㄴ', L'ㄵ', L'ㄶ', L'ㄷ', 
	L'ㄹ', L'ㄺ', L'ㄻ', L'ㄼ', 
	L'ㄽ', L'ㄾ', L'ㄿ', L'ㅀ', 
	L'ㅁ', L'ㅂ', L'ㅄ', L'ㅅ', 
	L'ㅆ', L'ㅇ', L'ㅈ', L'ㅊ', 
	L'ㅋ', L'ㅌ', L'ㅍ', L'ㅎ'}; 

//특수문자 .,?!
static const wchar_t wcS[]={
    L'.',L',',L'?',L'!'
};    
//약자 한음절
static const wchar_t abb[]={ /*abbreviation 약자*/
    L'가',L'나',L'다',L'마',L'바',
    L'사',L'자',L'카',L'타',L'파',
    L'하',L'것',L'억',L'언',L'얼',
    L'연',L'열',L'영',L'옥',L'온',
    L'옹',L'운',L'울',L'은',L'을',L'인'
};

//약자 긴 단어
static const wchar_t longabb[]={
	L"그래서", L"그러나", L"그러면" , L"그러므로" , L"그런데" , L"그리고" , L"그리하여"
	//& #xADF8;& #xB798;& #xC11C;
	//& #xADF8;& #xB7EC;& #xB098;
	//& #xADF8;& #xB7EC;& #xBA74;
	//& #xADF8;& #xB7EC;& #xBBC0;& #xB85C;
	//& #xADF8;& #xB7F0;& #xB370;
	//& #xADF8;& #xB9AC;& #xACE0;
	//& #xADF8;& #xB9AC;& #xD558;& #xC5EC;
};
char wcF1[19][12] = { 
	{0,0,0,1,0,0,0,0,0,0,0,0}, {0,0,0,1,0,0,0,0,0,0,0,1},{1,0,0,1,0,0,0,0,0,0,0,0},{0,1,0,1,0,0,0,0,0,0,0,0},
	{0,1,0,1,0,0,0,0,0,0,0,1},{0,0,0,0,1,0,0,0,0,0,0,0},{1,0,0,0,1,0,0,0,0,0,0,0},{0,0,0,1,1,0,0,0,0,0,0,0},
	{0,0,0,1,1,0,0,0,0,0,0,1},{0,0,0,0,0,1,0,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,0,0,1},{0,0,0,0,0,0,0,0,0,0,0,0}, //ㅇ은 그냥 다 0
	{0,0,0,1,0,1,0,0,0,0,0,0},{0,0,0,1,0,1,0,0,0,0,0,1},{0,0,0,0,1,1,0,0,0,0,0,0},{1,1,0,1,0,0,0,0,0,0,0,0},
	{1,1,0,0,1,0,0,0,0,0,0,0},{1,0,0,1,1,0,0,0,0,0,0,0},{0,1,0,1,1,0,0,0,0,0,0,0}};
      
char wcM1[21][12] = { 	
	{1,1,0,0,0,1,0,0,0,0,0,0},{1,1,1,0,1,0,0,0,0,0,0,0},{0,0,0,1,1,1,0,0,0,0,0,0},{0,0,1,1,1,0,1,1,1,0,1,0},
	{0,1,1,1,0,0,0,0,0,0,0,0},{1,0,1,1,1,0,0,0,0,0,0,0},{1,0,0,0,1,1,0,0,0,0,0,0},{0,0,1,1,0,0,0,0,0,0,0,0},
	{1,0,1,0,0,1,0,0,0,0,0,0},{1,1,1,0,0,1,0,0,0,0,0,0},{1,1,1,0,0,1,1,1,1,0,1,0},{1,0,1,1,1,1,0,0,0,0,0,0}, 
	{0,0,1,1,0,1,0,0,0,0,0,0},{1,0,1,1,0,0,0,0,0,0,0,0},{1,1,1,1,0,0,0,0,0,0,0,0},{1,1,1,1,0,0,1,1,1,0,1,0},
	{1,0,1,1,0,0,1,1,1,0,1,0},{1,0,0,1,0,1,0,0,0,0,0,0},{0,1,0,1,0,1,0,0,0,0,0,0},{0,1,0,1,1,1,0,0,0,0,0,0},
	{1,0,1,0,1,0,0,0,0,0,0,0}};

char wcL1[28][12] = { 	
	{0,0,0,0,0,0,1,1,1,1,1,1}, {1,0,0,0,0,0,0,0,0,0,0,0},{1,0,0,0,0,0,1,0,0,0,0,0},{1,0,0,0,0,0,0,0,1,0,0,0}, //' '은 000000111111
	{0,1,0,0,1,0,0,0,0,0,0,0},{0,1,0,0,1,0,1,0,1,0,0,0},{0,1,0,0,1,0,0,0,1,0,1,1},{0,0,1,0,1,0,0,0,0,0,0,0},
	{0,1,0,0,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,1,0,0,0,0,0},{0,1,0,0,0,0,0,1,0,0,0,1},{0,1,0,0,0,0,1,1,0,0,0,0}, 
	{0,1,0,0,0,0,0,0,1,0,0,0},{0,1,0,0,0,0,0,1,1,0,0,1},{0,1,0,0,0,0,0,1,0,0,1,1},{0,1,0,0,0,0,0,0,1,0,1,1},
	{0,1,0,0,0,1,0,0,0,0,0,0},{1,1,0,0,0,0,0,0,0,0,0,0},{1,1,0,0,0,0,0,0,1,0,0,0},{0,0,1,0,0,0,0,0,0,0,0,0},
	{0,0,1,1,0,0,0,0,0,0,0,0},{0,1,1,0,1,1,0,0,0,0,0,0},{1,0,1,0,0,0,0,0,0,0,0,0},{0,1,1,0,0,0,0,0,1,0,0,0}, //약자에서 ㅆ받침은 그냥 종성으로 넣었음
	{0,1,1,0,1,0,0,0,0,0,0,0},{0,1,1,0,0,1,0,0,0,0,0,0},{0,1,0,0,1,1,0,0,0,0,0,0},{0,0,1,0,1,1,0,0,0,0,0,0} };   

char wcS1[4][12] = {
	{0,1,0,0,1,1,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,0,0,0,0}, {0,1,1,0,0,1,0,0,0,0,0,0},{0,1,1,0,1,0,0,0,0,0,0,0}};

char abb1[26][12] = { 
	{1,1,0,1,0,1,0,0,0,0,0,0},{1,0,0,1,0,0,0,0,0,0,0,0},{0,1,0,1,0,0,0,0,0,0,0,0},{1,0,0,0,1,0,0,0,0,0,0,0},
	{0,0,0,1,1,0,0,0,0,0,0,0},{1,1,1,0,0,0,0,0,0,0,0,0},{0,0,0,1,0,1,0,0,0,0,0,0},{1,1,0,1,0,0,0,0,0,0,0,0},
	{1,1,0,0,1,0,0,0,0,0,0,0},{1,0,0,1,1,0,0,0,0,0,0,0},{0,1,0,1,1,0,0,0,0,0,0,1},{0,0,0,1,1,1,0,1,1,1,0,0}, 
	{1,1,0,0,1,1,0,0,0,0,0,0},{1,1,0,1,1,1,0,0,0,0,0,0},{1,0,1,1,0,1,0,0,0,0,0,0},{1,1,1,0,1,1,0,0,0,0,0,0},
	{1,1,1,1,1,1,0,0,0,0,0,0},{1,1,0,1,1,0,0,0,0,0,0,0},{1,1,1,1,0,1,0,0,0,0,0,0},{1,0,1,0,1,1,0,0,0,0,0,0},
	{0,1,1,1,0,1,0,0,0,0,0,0},{1,1,1,1,1,0,0,0,0,0,0,0} };   

char longabb1[7][12] = {	
	{1,0,0,0,0,0,0,1,1,1,0,0},{1,0,0,0,0,0,1,0,0,1,0,0},{1,0,0,0,0,0,0,1,0,0,1,0},{1,0,0,0,0,0,0,1,0,0,0,1},
	{1,0,0,0,0,0,1,0,1,1,1,0},{1,0,0,0,0,0,1,0,0,0,1,1},{1,0,0,0,0,0,1,0,0,0,1,1} };

// ch 가 한글인지 아닌지를 판단
bool checkForDBC(const char &ch); 				// for double byte code 


bool checkHangulForUniCode(const wchar_t &ch); // for unicode 한글
bool checkspecialForUniCode(const wchar_t &ch); //특수문자
bool checkabbForUniCode(const wchar_t &ch); //짧은 약자
bool checklongabbForUniCode(const wchar_t &ch); //긴 약자

// 초성 중성 종성 특수문자,약자, 긴약자 분리
bool wchar_FML(const wchar_t &wc, int &F, int &M, int &L, int &S, int &A, wchar_t &LA );

// 초성 중성 종성 특수문자,약자, 긴약자 출력
void print_FML(const wchar_t &wc);

//===========================================================

int main()
{
	setlocale(LC_ALL, "korean"); // locale setting
	wcout.imbue(locale("")); // wcout stream setting

	wchar_t a[] = L"Hello 세계!";  // 분석할 문자열

 


	for(int j = 0 ; a[j] ; j++)
		print_FML(a[j]);

	return 0;
}

//===========================================================

// ch 가 한글인지 아닌지를 판단
bool checkForDBC(const char &ch) 				// for double byte code 
{
	return (ch & 0x80) == 1;							// 최상위 비트 1 인지 검사
}

bool checkHangulForUniCode(const wchar_t &ch) // for unicode
{
	return !(ch < 44032 || ch > 55199); // 0xAC00(가) ~ 0xD7A3(힣)
}

bool checkabbForUniCode(const wchar_t &ch)
{
	return (ch=='\x002e'||'\x002c'||'\x002f'||'\x0021');
}
bool checkabbForUniCode(const wchar_t &ch)
{
	return
}
bool checklongabbForUniCode(const wchar_t &ch)
{

}


// 초성 중성 종성 분리
bool wchar_FML(const wchar_t &wc, int &F, int &M, int &L, int &S,int &A, wchar_t &LA )
{
    if(checkForDBC(wc))
	// 한글인지 구분
	{

		if(checklongabbForUniCode(wc))
		{
			int wc2=
		}
		
		
		if(checkHangulForUniCode(wc))
		{
			int wc3 = (int)wc-0xAC00;
			L = wc3%28;
			wc3/=28;
			M = wc3%21;
			F = wc3/21;
			return true;
			if(checkspecialForUniCode(wc))
			
			
			

			if(checkabbForUniCode(wc))
			{

			}

			
			
			}
	
	{
		
	}
	return false; // 한글이 아니면 false
	}
}
// 초성 중성 종성 출력
void print_FML(const wchar_t &wc)
{
	int f, m, l;
	bool ret = wchar_FML(wc, f, m, l, s, a, la);
	if(ret)
		wcout<<wc<<" = ( "<<wcF[f]<<", "<<wcM[m]<<", "<<wcL[l]<<" )"<<endl;
	else{
		wcout<<wc<<" is not Hangul."<<endl;
	}
} 